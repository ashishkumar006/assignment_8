name: Python application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Python
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run the Python tests (replace this with your actual test command)
    - name: Run tests
      run: |
        python -m unittest discover -s tests  # This assumes you have test files under a 'tests' folder
        # OR run any other testing script (like pytest or pytest with specific checks)
        
    # Check for model parameters < 20k and other checks (you can add additional scripts here)
    - name: Check model parameters and other checks
      run: |
        python -c "import torch; import your_model_file; model = your_model_file.Net(); \
        print(f'Number of parameters: {sum(p.numel() for p in model.parameters())}'); \
        assert sum(p.numel() for p in model.parameters()) < 20000, 'Model has more than 20k parameters';"
        
        python -c "import your_model_file; model = your_model_file.Net(); \
        assert any(isinstance(layer, torch.nn.BatchNorm2d) for layer in model.modules()), 'BatchNorm is not used'; \
        assert any(isinstance(layer, torch.nn.Dropout) for layer in model.modules()), 'Dropout is not used'; \
        assert any(isinstance(layer, torch.nn.Linear) or isinstance(layer, torch.nn.AdaptiveAvgPool2d) for layer in model.modules()), 'No Fully Connected or GAP layers found';"
        
    # Optionally, you can run additional checks or commands here
